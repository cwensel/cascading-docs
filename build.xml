<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2007-2012 Concurrent, Inc. All Rights Reserved.
  ~
  ~ Project and contact information: http://www.concurrentinc.com/
  -->

<!--
  $Id: //depot/calku/cascading.org/build.xml#10 $
  $Change: 1410 $
  $DateTime: 2008/07/15 14:24:06 $
  $Author: cwensel $
-->
<project name="cascading.docs" default="build" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

  <property file="${basedir}/../build.properties"/>
  <property file="${basedir}/build.properties"/>

  <property file="${doc.aws.properties}"/>

  <property name="website.host" value=""/>
  <property name="website.path" value="site"/>
  <property name="website.port" value="22"/>

  <property name="site" location="${basedir}/site/"/>
  <property name="site.javadoc" location="${basedir}/site/javadoc"/>
  <property name="site.userguide" location="${basedir}/site/userguide"/>

  <property name="lib.dir" value="${basedir}/lib"/>
  <property name="libsrc.dir" value="${basedir}/lib/src"/>

  <target name="init" depends="retrieve">
    <path id="project.class.path">
      <fileset dir="${lib.dir}">
        <include name="*.jar"/>
        <exclude name="*-sources.jar"/>
      </fileset>
    </path>

    <property classpathref="project.class.path" resource="cascading/version.properties"/>
    <!--build.number=wip-dev-->

    <property classpathref="project.class.path" resource="cascading/build.number.properties"/>

    <property name="cascading.release" value="${cascading.release.major}"/>
    <property name="cascading.release.full"
              value="${cascading.release.major}.${cascading.release.minor}-${cascading.build.number}"/>

  </target>

  <target name="unjar-src">

    <unjar dest="${libsrc.dir}">
      <patternset>
        <include name="**/*.java"/>
      </patternset>
      <fileset dir="${lib.dir}">
        <include name="**/*-sources.jar"/>
      </fileset>
    </unjar>

  </target>

  <target name="site-javadoc" depends="init,unjar-src">
    <echo message="creating cascading javadoc..."/>

    <delete dir="${site.javadoc}"/>
    <mkdir dir="${site.javadoc}"/>

    <javadoc
      destdir="${site.javadoc}"
      windowtitle="Cascading ${cascading.release.full}"
      Verbose="true">

      <fileset dir="${libsrc.dir}" defaultexcludes="yes">

        <!-- tests -->
        <exclude name="**/*Test.java"/>
        <exclude name="**/Test*.java"/>
        <exclude name="data/**"/>
        <exclude name="cascading/detail/**"/>
        <exclude name="cascading/assembly/**"/>

        <!-- internal -->
        <exclude name="cascading/util/**"/>
        <exclude name="cascading/**/planner/**"/>
        <exclude name="cascading/**/stream/**"/>

      </fileset>

      <classpath refid="project.class.path"/>
      <link href="http://java.sun.com/javase/6/docs/api/"/>
      <link href="http://dist.codehaus.org/janino/javadoc/"/>
      <link href="http://hadoop.apache.org/common/docs/r0.20.2/api/"/>
      <bottom>
        <![CDATA[<i>Copyright &#169; 2007-2012 Concurrent, Inc. All Rights Reserved.</i>]]>
        <![CDATA[<script type="text/javascript">var _gaq = _gaq || []; _gaq.push(['_setAccount', 'UA-188528-5']); _gaq.push(['_setDomainName', 'cascading.org']); _gaq.push(['_trackPageview']); (function() { var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s); })(); </script>]]>
      </bottom>
    </javadoc>

  </target>

  <target name="site-userguide" depends="init">
    <echo message="creating cascading userguide..."/>

    <delete dir="${site.userguide}"/>
    <mkdir dir="${site.userguide}"/>

    <ant antfile="docbook/build.xml" target="all" inheritall="false"/>

    <copy todir="${site.userguide}">
      <fileset dir="docbook/target/userguide/">
        <exclude name="**/tmp/**"/>
        <exclude name="**/*.html"/>
      </fileset>
    </copy>

    <copy todir="${site.userguide}">
      <fileset dir="docbook/target/userguide/">
        <exclude name="**/tmp/**"/>
        <include name="**/*.html"/>
      </fileset>
      <filterset recurse="false">
        <filtersfile file="etc/filters.properties"/>
      </filterset>
    </copy>

  </target>

  <target name="rsync-javadocs" depends="site-javadoc">
    <echo message="Starting javadoc transfer to ${website.host}:${website.path}/${cascading.release}"/>
    <exec dir="." executable="rsync" failonerror="true">
      <arg value="-r"/>
      <arg value="-v"/>
      <arg value="--delete"/>
      <!--<arg value="-n"/>-->
      <arg value="--rsh=ssh"/>
      <arg value="${site.javadoc}"/>
      <arg
        value="${website.host}:${website.path}/${cascading.release}"/>
    </exec>
  </target>

  <target name="rsync-userguide" depends="site-userguide">
    <echo message="Starting userguide transfer to ${website.host}:${website.path}/${cascading.release}"/>
    <exec dir="." executable="rsync" failonerror="true">
      <arg value="-r"/>
      <arg value="-v"/>
      <arg value="--delete"/>
      <!--<arg value="-n"/>-->
      <arg value="--rsh=ssh"/>
      <arg value="${site.userguide}"/>
      <arg
        value="${website.host}:${website.path}/${cascading.release}"/>
    </exec>
  </target>

  <target name="clean">
    <delete dir="${site}"/>
    <ant antfile="docbook/build.xml" target="clean" inheritall="false"/>
  </target>

  <target name="s3-userguide" depends="site-userguide" if="publish.bucket">

    <taskdef name="S3Upload" classname="dak.ant.taskdefs.S3Upload"/>

    <S3Upload verbose="true"
              accessId="${publish.aws.accessId}"
              secretKey="${publish.aws.secretKey}"
              bucket="${publish.bucket}"
              prefix="cascading/${cascading.release}/userguide/"
              mimeTypesFile="${basedir}/etc/mime.types.txt"
              publicRead="true">
      <fileset dir="${site.userguide}"/>
    </S3Upload>
  </target>

  <target name="s3-javadoc" depends="site-javadoc" if="publish.bucket">

    <taskdef name="S3Upload" classname="dak.ant.taskdefs.S3Upload"/>

    <S3Upload verbose="true"
              accessId="${publish.aws.accessId}"
              secretKey="${publish.aws.secretKey}"
              bucket="${publish.bucket}"
              prefix="cascading/${cascading.release}/javadoc/"
              mimeTypesFile="${basedir}/etc/mime.types.txt"
              publicRead="true">
      <fileset dir="${site.javadoc}"/>
    </S3Upload>
  </target>

  <target name="retrieve">
    <delete dir="${lib.dir}"/>
    <mkdir dir="${lib.dir}"/>

    <ivy:settings id="ivy.conjars.settings" url="http://conjars.org/repo/ivysettings.xml"/>

    <ivy:retrieve file="${basedir}/ivy.xml" settingsRef="ivy.conjars.settings" conf="default"
                  pattern="${lib.dir}/[artifact]-[revision].[ext]" sync="false" type="jar,bundle"/>

    <ivy:retrieve file="${basedir}/ivy.xml" settingsRef="ivy.conjars.settings" conf="default"
                  pattern="${lib.dir}/[artifact]-[revision]-[type].[ext]" sync="false" type="sources"/>

    <ivy:retrieve file="${basedir}/ivy.xml" settingsRef="ivy.conjars.settings" conf="default"
                  pattern="${lib.dir}/[artifact]-[revision]-[type].[ext]" sync="false" type="test"/>
  </target>
</project>